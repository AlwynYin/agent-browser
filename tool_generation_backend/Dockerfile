# Use Python 3.13 slim image
FROM python:3.13-slim

# Set working directory to match local structure
WORKDIR /app/tool_generation_backend

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js for Codex CLI
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Install Codex CLI globally via npm
RUN npm install -g @openai/codex

# Verify Codex CLI installation
RUN which codex && codex --version

# Install uv
RUN pip install uv

# Copy dependency files
COPY pyproject.toml uv.lock ./

# Install Python dependencies
RUN uv sync --frozen

# Copy application code
COPY . .

# Clone simpletooling template repo into tool_service directory
RUN git clone https://github.com/EvoEvolver/simpletooling_template.git /app/tool_service

# Create Codex config directory and add trusted project config
RUN mkdir -p /root/.codex
RUN echo 'model = "gpt-5"' > /root/.codex/config.toml && \
    echo 'model_reasoning_effort = "low"' >> /root/.codex/config.toml && \
    echo '' >> /root/.codex/config.toml && \
    echo '[projects."/app/tool_service"]' >> /root/.codex/config.toml && \
    echo 'trust_level = "trusted"' >> /root/.codex/config.toml

# Note: Codex authentication will happen at app startup

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/health || exit 1

# Start command (from within tool_generation_backend)
CMD ["uv", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]